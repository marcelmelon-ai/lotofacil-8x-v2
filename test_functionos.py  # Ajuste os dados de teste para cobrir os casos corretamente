import pandas as pd
import random
import pytest

def test_carregar_dados_excel():
    df = carregar_dados_excel("data/resultados.xlsx")
    assert not df.empty, "O DataFrame deve ser carregado corretamente!"

def test_preprocessar_dados():
    df = pd.DataFrame({
        "D1": [random.randint(1, 25) for _ in range(10)],
        "D2": [random.randint(1, 25) for _ in range(10)],
        "D3": [random.randint(1, 25) for _ in range(10)],
        "D15": [random.randint(1, 25) for _ in range(10)],
        "Soma das dezenas": [random.randint(100, 200) for _ in range(10)]
    })
    X, y = preprocessar_dados(df)
    assert y.between(1, 25).all(), "Os valores de y devem estar entre 1 e 25!"

def test_calcular_frequencia():
    df = pd.DataFrame({
        f"D{i}": [random.randint(1, 25) for _ in range(10)] for i in range(1, 15)
    })
    freq = calcular_frequencia(df)
    assert not freq.empty, "Frequência não foi calculada corretamente!"
    assert freq["Dezena"].between(1, 25).all(), "Frequência contém dezenas fora do intervalo esperado!"

def test_pagina_gerador():
    frequencia = pd.DataFrame({
        "Dezena": [i for i in range(1, 26)],
        "Frequência": [random.randint(1, 100) for _ in range(1, 26)]
    })
    st.session_state["frequencia"] = frequencia
    pagina_gerador()

def test_pagina_estatisticas():
    df = pd.DataFrame({
        f"D{i}": [random.randint(1, 25) for _ in range(10)] for i in range(1, 15)
    })
    frequencia = calcular_frequencia(df)
    assert not frequencia.empty, "Frequência não foi calculada corretamente!"
    assert frequencia["Dezena"].between(1, 25).all(), "Frequência contém dezenas fora do intervalo esperado!"

def test_gerar_jogos_otimizados():
    df = pd.DataFrame({
        "D1": [random.randint(1, 25) for _ in range(25)],
        "D2": [random.randint(1, 25) for _ in range(25)],
        "D3": [random.randint(1, 25) for _ in range(25)],
        "D15": [random.randint(1, 25) for _ in range(25)]
    })
    jogos = gerar_jogos_otimizados(df, num_jogos=2)
    assert jogos is not None, "Os jogos devem ser gerados corretamente!"